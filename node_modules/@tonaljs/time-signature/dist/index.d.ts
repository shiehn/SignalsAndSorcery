export declare type TimeSignatureLiteral = string | [number, number] | [string, string];
declare type ParsedTimeSignature = [number | number[], number];
export declare type ValidTimeSignature = {
    readonly empty: false;
    readonly name: string;
    readonly upper: number | number[];
    readonly lower: number;
    readonly type: "simple" | "compound" | "irregular";
    readonly additive: number[];
};
export declare type InvalidTimeSignature = {
    readonly empty: true;
    readonly name: "";
    readonly upper: undefined;
    readonly lower: undefined;
    readonly type: undefined;
    readonly additive: [];
};
export declare type TimeSignature = ValidTimeSignature | InvalidTimeSignature;
export declare function names(): string[];
export declare function get(literal: TimeSignatureLiteral): TimeSignature;
export declare function parse(literal: TimeSignatureLiteral): ParsedTimeSignature;
declare const _default: {
    names: typeof names;
    parse: typeof parse;
    get: typeof get;
};
export default _default;
