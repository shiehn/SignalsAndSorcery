declare type Fifths = number;
declare type Octaves = number;
export declare type Direction = 1 | -1;
export declare type PitchClassCoordinates = [Fifths];
export declare type NoteCoordinates = [Fifths, Octaves];
export declare type IntervalCoordinates = [Fifths, Octaves, Direction];
export declare type PitchCoordinates = PitchClassCoordinates | NoteCoordinates | IntervalCoordinates;
/**
 * Pitch properties
 *
 * - {number} step - The step number: 0 = C, 1 = D, ... 6 = B
 * - {number} alt - Number of alterations: -2 = 'bb', -1 = 'b', 0 = '', 1 = '#', ...
 * - {number} [oct] = The octave (undefined when is a coord class)
 * - {number} [dir] = Interval direction (undefined when is not an interval)
 */
export interface Pitch {
    readonly step: number;
    readonly alt: number;
    readonly oct?: number;
    readonly dir?: Direction;
}
export declare function isPitch(pitch: any): pitch is Pitch;
export declare function encode(pitch: Pitch): PitchCoordinates;
export declare function decode(coord: PitchCoordinates): Pitch;
export {};
